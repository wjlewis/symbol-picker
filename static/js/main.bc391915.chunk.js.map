{"version":3,"sources":["app/segments.ts","header/index.tsx","segment/index.tsx","app/index.tsx","index.tsx"],"names":["title","glyphs","Header","content","className","dangerouslySetInnerHTML","__html","Segment","props","map","glyph","key","onClick","App","defaultTitle","state","bannerTimeout","undefined","copyGlyph","wasSuccess","copyToClipboard","clearTimeout","setState","setTimeout","this","segments","text","document","createElement","innerHTML","style","top","left","position","body","appendChild","focus","select","execCommand","removeChild","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"qTAAe,G,MAAA,CACb,CACEA,MAAO,cACPC,OAAQ,CACN,YACA,oBACA,oBACA,kBACA,0BACA,0BACA,YACA,oBACA,sBAGJ,CACED,MAAO,QACPC,OAAQ,CACN,WACA,mBACA,mBACA,mBACA,2BACA,6BAGJ,CACED,MAAO,eACPC,OAAQ,CAAC,UAAW,cAEtB,CAAED,MAAO,aAAcC,OAAQ,CAAC,oBAAqB,sBACrD,CAAED,MAAO,YAAaC,OAAQ,CAAC,QAAS,QAAS,QAAS,eCpB7CC,G,MAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACb,yBAAKC,UAAU,SAASC,wBAAyB,CAAEC,OAAQH,OCiB9CI,G,MAhBC,SAACC,GAAD,OACd,yBAAKJ,UAAU,WACb,wBAAIA,UAAU,kBAAkBI,EAAMR,OACtC,yBAAKI,UAAU,4BACZI,EAAMP,OAAOQ,KAAI,SAAAC,GAAK,OACrB,4BACEC,IAAKD,EACLN,UAAU,iBACVQ,QAAS,kBAAMJ,EAAMI,QAAQF,IAC7BL,wBAAyB,CAAEC,OAAQI,YCmD9BG,E,4MAvDIC,aAAe,6C,EAEhCC,MAAQ,CACNC,mBAAeC,EACfjB,MAAO,EAAKc,c,EAmBNI,UAAY,SAACR,GACnB,IAAMS,EAAa,EAAKC,gBAAgBV,GACpC,EAAKK,MAAMC,eAAeK,aAAa,EAAKN,MAAMC,eACtD,EAAKM,SAAS,CACZtB,MAAOmB,EAAU,iBACHT,EADG,2CAEKA,EAFL,oBAGjBM,cAAeO,YACb,kBACE,EAAKD,SAAS,CACZtB,MAAO,EAAKc,iBAEhB,S,uDA5BI,IAAD,OACP,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,CAAQD,QAASqB,KAAKT,MAAMf,QAC3ByB,EAAShB,KAAI,gBAAGT,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACZ,kBAAC,EAAD,CACEU,IAAKX,EACLA,MAAOA,EACPC,OAAQA,EACRW,QAAS,EAAKM,kB,sCAwBAR,GACtB,IAAMgB,EAAOC,SAASC,cAAc,YACpCF,EAAKG,UAAYnB,EACjBgB,EAAKI,MAAMC,IAAM,IACjBL,EAAKI,MAAME,KAAO,IAClBN,EAAKI,MAAMG,SAAW,QACtBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAKU,QACLV,EAAKW,SACL,IAAMlB,EAAaQ,SAASW,YAAY,QAExC,OADAX,SAASO,KAAKK,YAAYb,GACnBP,M,GApDOqB,IAAMC,WCRxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,W","file":"static/js/main.bc391915.chunk.js","sourcesContent":["export default [\n  {\n    title: 'proportions',\n    glyphs: [\n      '&#119901;',\n      '&#119901;&#x2081;',\n      '&#119901;&#x2082;',\n      '&#119901;&#770;',\n      '&#119901;&#770;&#x2081;',\n      '&#119901;&#770;&#x2082;',\n      '&#119899;',\n      '&#119899;&#x2081;',\n      '&#119899;&#x2082;',\n    ],\n  },\n  {\n    title: 'means',\n    glyphs: [\n      '&#x03bc;',\n      '&#x03bc;&#x2081;',\n      '&#x03bc;&#x2082;',\n      '&#x1d465;&#x305;',\n      '&#x1d465;&#x305;&#x2081;',\n      '&#x1d465;&#x305;&#x2082;',\n    ],\n  },\n  {\n    title: 'correlations',\n    glyphs: ['&#x3c1;', '&#119903;'],\n  },\n  { title: 'hypotheses', glyphs: ['&#119867;&#x2080;', '&#119867;&#x2090;'] },\n  { title: 'relations', glyphs: ['&#60;', '&#62;', '&#61;', '&#x2260;'] },\n];\n","import React from 'react';\nimport './index.css';\n\ninterface HeaderProps {\n  content: string;\n}\n\nconst Header = ({ content }: HeaderProps) => (\n  <div className=\"header\" dangerouslySetInnerHTML={{ __html: content }}></div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './index.css';\n\ninterface SegmentProps {\n  title: string;\n  glyphs: string[];\n  onClick: (glyph: string) => void;\n}\n\nconst Segment = (props: SegmentProps) => (\n  <div className=\"segment\">\n    <h2 className=\"segment__title\">{props.title}</h2>\n    <div className=\"segment__glyph-container\">\n      {props.glyphs.map(glyph => (\n        <button\n          key={glyph}\n          className=\"segment__glyph\"\n          onClick={() => props.onClick(glyph)}\n          dangerouslySetInnerHTML={{ __html: glyph }}\n        ></button>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Segment;\n","import React from 'react';\nimport './index.css';\nimport segments from './segments';\nimport Header from '../header';\nimport Segment from '../segment';\n\ninterface AppProps {}\n\ninterface AppState {\n  bannerTimeout?: number;\n  title: string;\n}\n\nclass App extends React.Component<AppProps> {\n  private readonly defaultTitle = 'Click a glyph to copy it to your clipboard';\n\n  state = {\n    bannerTimeout: undefined,\n    title: this.defaultTitle,\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header content={this.state.title} />\n        {segments.map(({ title, glyphs }) => (\n          <Segment\n            key={title}\n            title={title}\n            glyphs={glyphs}\n            onClick={this.copyGlyph}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  private copyGlyph = (glyph: string): void => {\n    const wasSuccess = this.copyToClipboard(glyph);\n    if (this.state.bannerTimeout) clearTimeout(this.state.bannerTimeout);\n    this.setState({\n      title: wasSuccess\n        ? `Copied ${glyph} to clipboard!`\n        : `Unable to copy ${glyph} to clipboard :(`,\n      bannerTimeout: setTimeout(\n        () =>\n          this.setState({\n            title: this.defaultTitle,\n          }),\n        1500,\n      ),\n    });\n  };\n\n  private copyToClipboard(glyph: string): boolean {\n    const text = document.createElement('textarea');\n    text.innerHTML = glyph;\n    text.style.top = '0';\n    text.style.left = '0';\n    text.style.position = 'fixed';\n    document.body.appendChild(text);\n    text.focus();\n    text.select();\n    const wasSuccess = document.execCommand('copy');\n    document.body.removeChild(text);\n    return wasSuccess;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}